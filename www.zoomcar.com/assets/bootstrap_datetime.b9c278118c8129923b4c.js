webpackJsonp([31],{296:function(t,e){t.exports="/* =========================================================\n * bootstrap-datetimepicker.js\n * =========================================================\n * Copyright 2012 Stefan Petre\n * Improvements by Andrew Rowls\n * Improvements by SÃ©bastien Malot\n * Improvements by Yun Lai\n * Project URL : http://www.malot.fr/bootstrap-datetimepicker\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * ========================================================= */\n\n/*\n * Improvement by CuGBabyBeaR @ 2013-09-12\n * \n * Make it work in bootstrap v3\n */\n\n!function ($) {\n\n\tfunction UTCDate() {\n\t\treturn new Date(Date.UTC.apply(Date, arguments));\n\t}\n\n\tfunction UTCToday() {\n\t\tvar today = new Date();\n\t\treturn UTCDate(today.getUTCFullYear(), today.getUTCMonth(), today.getUTCDate(), today.getUTCHours(), today.getUTCMinutes(), today.getUTCSeconds(), 0);\n\t}\n\n\t// Picker object\n\n\tvar Datetimepicker = function (element, options) {\n\t\tvar that = this;\n\n\t\tthis.element = $(element);\n\n\t\tthis.language = options.language || this.element.data('date-language') || \"en\";\n\t\tthis.language = this.language in dates ? this.language : \"en\";\n\t\tthis.isRTL = dates[this.language].rtl || false;\n\t\tthis.formatType = options.formatType || this.element.data('format-type') || 'standard';\n\t\tthis.format = DPGlobal.parseFormat(options.format || this.element.data('date-format') || dates[this.language].format || DPGlobal.getDefaultFormat(this.formatType, 'input'), this.formatType);\n\t\tthis.isInline = false;\n\t\tthis.isVisible = false;\n\t\tthis.isInput = this.element.is('input');\n\n\t\tthis.bootcssVer = 3;\n\n\t\tthis.component = this.element.is('.date') ? ( this.bootcssVer == 3 ? this.element.find('.input-group-addon .glyphicon-th, .input-group-addon .glyphicon-time, .input-group-addon .glyphicon-calendar').parent() : this.element.find('.add-on .icon-th, .add-on .icon-time, .add-on .icon-calendar').parent()) : false;\n\t\tthis.componentReset = this.element.is('.date') ? ( this.bootcssVer == 3 ? this.element.find('.input-group-addon .glyphicon-remove').parent() : this.element.find('.add-on .icon-remove').parent()) : false;\n\t\tthis.hasInput = this.component && this.element.find('input').length;\n\t\tif (this.component && this.component.length === 0) {\n\t\t\tthis.component = false;\n\t\t}\n\t\tthis.linkField = options.linkField || this.element.data('link-field') || false;\n\t\tthis.linkFormat = DPGlobal.parseFormat(options.linkFormat || this.element.data('link-format') || DPGlobal.getDefaultFormat(this.formatType, 'link'), this.formatType);\n\t\tthis.minuteStep = options.minuteStep || this.element.data('minute-step') || 5;\n\t\tthis.pickerPosition = options.pickerPosition || this.element.data('picker-position') || 'bottom-right';\n\t\tthis.showMeridian = options.showMeridian || this.element.data('show-meridian') || false;\n\t\tthis.initialDate = options.initialDate || new Date();\n\n\t\tthis._attachEvents();\n\n\t\tthis.formatViewType = \"datetime\";\n\t\tif ('formatViewType' in options) {\n\t\t\tthis.formatViewType = options.formatViewType;\n\t\t} else if ('formatViewType' in this.element.data()) {\n\t\t\tthis.formatViewType = this.element.data('formatViewType');\n\t\t}\n\n\t\tthis.minView = 0;\n\t\tif ('minView' in options) {\n\t\t\tthis.minView = options.minView;\n\t\t} else if ('minView' in this.element.data()) {\n\t\t\tthis.minView = this.element.data('min-view');\n\t\t}\n\t\tthis.minView = DPGlobal.convertViewMode(this.minView);\n\n\t\tthis.maxView = DPGlobal.modes.length - 1;\n\t\tif ('maxView' in options) {\n\t\t\tthis.maxView = options.maxView;\n\t\t} else if ('maxView' in this.element.data()) {\n\t\t\tthis.maxView = this.element.data('max-view');\n\t\t}\n\t\tthis.maxView = DPGlobal.convertViewMode(this.maxView);\n\n\t\tthis.wheelViewModeNavigation = false;\n\t\tif ('wheelViewModeNavigation' in options) {\n\t\t\tthis.wheelViewModeNavigation = options.wheelViewModeNavigation;\n\t\t} else if ('wheelViewModeNavigation' in this.element.data()) {\n\t\t\tthis.wheelViewModeNavigation = this.element.data('view-mode-wheel-navigation');\n\t\t}\n\n\t\tthis.wheelViewModeNavigationInverseDirection = false;\n\n\t\tif ('wheelViewModeNavigationInverseDirection' in options) {\n\t\t\tthis.wheelViewModeNavigationInverseDirection = options.wheelViewModeNavigationInverseDirection;\n\t\t} else if ('wheelViewModeNavigationInverseDirection' in this.element.data()) {\n\t\t\tthis.wheelViewModeNavigationInverseDirection = this.element.data('view-mode-wheel-navigation-inverse-dir');\n\t\t}\n\n\t\tthis.wheelViewModeNavigationDelay = 100;\n\t\tif ('wheelViewModeNavigationDelay' in options) {\n\t\t\tthis.wheelViewModeNavigationDelay = options.wheelViewModeNavigationDelay;\n\t\t} else if ('wheelViewModeNavigationDelay' in this.element.data()) {\n\t\t\tthis.wheelViewModeNavigationDelay = this.element.data('view-mode-wheel-navigation-delay');\n\t\t}\n\n\t\tthis.startViewMode = 2;\n\t\tif ('startView' in options) {\n\t\t\tthis.startViewMode = options.startView;\n\t\t} else if ('startView' in this.element.data()) {\n\t\t\tthis.startViewMode = this.element.data('start-view');\n\t\t}\n\t\tthis.startViewMode = DPGlobal.convertViewMode(this.startViewMode);\n\t\tthis.viewMode = this.startViewMode;\n\n\t\tthis.viewSelect = this.minView;\n\t\tif ('viewSelect' in options) {\n\t\t\tthis.viewSelect = options.viewSelect;\n\t\t} else if ('viewSelect' in this.element.data()) {\n\t\t\tthis.viewSelect = this.element.data('view-select');\n\t\t}\n\t\tthis.viewSelect = DPGlobal.convertViewMode(this.viewSelect);\n\n\t\tthis.forceParse = true;\n\t\tif ('forceParse' in options) {\n\t\t\tthis.forceParse = options.forceParse;\n\t\t} else if ('dateForceParse' in this.element.data()) {\n\t\t\tthis.forceParse = this.element.data('date-force-parse');\n\t\t}\n\n\t\tthis.picker = $((this.bootcssVer == 3) ? DPGlobal.templateV3 : DPGlobal.template)\n\t\t\t.appendTo(this.isInline ? this.element : 'body')\n\t\t\t.on({\n\t\t\t\tclick:     $.proxy(this.click, this),\n\t\t\t\tmousedown: $.proxy(this.mousedown, this)\n\t\t\t});\n\n\t\tif (this.wheelViewModeNavigation) {\n\t\t\tif ($.fn.mousewheel) {\n\t\t\t\tthis.picker.on({mousewheel: $.proxy(this.mousewheel, this)});\n\t\t\t} else {\n\t\t\t\tconsole.log(\"Mouse Wheel event is not supported. Please include the jQuery Mouse Wheel plugin before enabling this option\");\n\t\t\t}\n\t\t}\n\n\t\tif (this.isInline) {\n\t\t\tthis.picker.addClass('datetimepicker-inline');\n\t\t} else {\n\t\t\tthis.picker.addClass('datetimepicker-dropdown-' + this.pickerPosition + ' dropdown-menu');\n\t\t}\n\t\tif (this.isRTL) {\n\t\t\tthis.picker.addClass('datetimepicker-rtl');\n\t\t\tif (this.bootcssVer == 3) {\n\t\t\t\tthis.picker.find('.prev span, .next span')\n\t\t\t\t\t.toggleClass('glyphicon-arrow-left glyphicon-arrow-right');\n\t\t\t} else {\n\t\t\t\tthis.picker.find('.prev i, .next i')\n\t\t\t\t\t.toggleClass('icon-arrow-left icon-arrow-right');\n\t\t\t}\n\t\t\t;\n\n\t\t}\n\t\t$(document).on('mousedown', function (e) {\n\t\t\t// Clicked outside the datetimepicker, hide it\n\t\t\tif ($(e.target).closest('.datetimepicker').length === 0) {\n\t\t\t\tthat.hide();\n\t\t\t}\n\t\t});\n\n\t\tthis.autoclose = false;\n\t\tif ('autoclose' in options) {\n\t\t\tthis.autoclose = options.autoclose;\n\t\t} else if ('dateAutoclose' in this.element.data()) {\n\t\t\tthis.autoclose = this.element.data('date-autoclose');\n\t\t}\n\n\t\tthis.keyboardNavigation = true;\n\t\tif ('keyboardNavigation' in options) {\n\t\t\tthis.keyboardNavigation = options.keyboardNavigation;\n\t\t} else if ('dateKeyboardNavigation' in this.element.data()) {\n\t\t\tthis.keyboardNavigation = this.element.data('date-keyboard-navigation');\n\t\t}\n\n\t\tthis.todayBtn = (options.todayBtn || this.element.data('date-today-btn') || false);\n\t\tthis.todayHighlight = (options.todayHighlight || this.element.data('date-today-highlight') || false);\n\n\t\tthis.weekStart = ((options.weekStart || this.element.data('date-weekstart') || dates[this.language].weekStart || 0) % 7);\n\t\tthis.weekEnd = ((this.weekStart + 6) % 7);\n\t\tthis.startDate = -Infinity;\n\t\tthis.endDate = Infinity;\n\t\tthis.daysOfWeekDisabled = [];\n\t\tthis.setStartDate(options.startDate || this.element.data('date-startdate'));\n\t\tthis.setEndDate(options.endDate || this.element.data('date-enddate'));\n\t\tthis.setDaysOfWeekDisabled(options.daysOfWeekDisabled || this.element.data('date-days-of-week-disabled'));\n\t\tthis.fillDow();\n\t\tthis.fillMonths();\n\t\tthis.update();\n\t\tthis.showMode();\n\n\t\tif (this.isInline) {\n\t\t\tthis.show();\n\t\t}\n\t};\n\n\tDatetimepicker.prototype = {\n\t\tconstructor: Datetimepicker,\n\n\t\t_events:       [],\n\t\t_attachEvents: function () {\n\t\t\tthis._detachEvents();\n\t\t\tif (this.isInput) { // single input\n\t\t\t\tthis._events = [\n\t\t\t\t\t[this.element, {\n\t\t\t\t\t\tfocus:   $.proxy(this.show, this),\n\t\t\t\t\t\tkeyup:   $.proxy(this.update, this),\n\t\t\t\t\t\tkeydown: $.proxy(this.keydown, this)\n\t\t\t\t\t}]\n\t\t\t\t];\n\t\t\t}\n\t\t\telse if (this.component && this.hasInput) { // component: input + button\n\t\t\t\tthis._events = [\n\t\t\t\t\t// For components that are not readonly, allow keyboard nav\n\t\t\t\t\t[this.element.find('input'), {\n\t\t\t\t\t\tfocus:   $.proxy(this.show, this),\n\t\t\t\t\t\tkeyup:   $.proxy(this.update, this),\n\t\t\t\t\t\tkeydown: $.proxy(this.keydown, this)\n\t\t\t\t\t}],\n\t\t\t\t\t[this.component, {\n\t\t\t\t\t\tclick: $.proxy(this.show, this)\n\t\t\t\t\t}]\n\t\t\t\t];\n\t\t\t\tif (this.componentReset) {\n\t\t\t\t\tthis._events.push([\n\t\t\t\t\t\tthis.componentReset,\n\t\t\t\t\t\t{click: $.proxy(this.reset, this)}\n\t\t\t\t\t]);\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if (this.element.is('div')) {  // inline datetimepicker\n\t\t\t\tthis.isInline = true;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthis._events = [\n\t\t\t\t\t[this.element, {\n\t\t\t\t\t\tclick: $.proxy(this.show, this)\n\t\t\t\t\t}]\n\t\t\t\t];\n\t\t\t}\n\t\t\tfor (var i = 0, el, ev; i < this._events.length; i++) {\n\t\t\t\tel = this._events[i][0];\n\t\t\t\tev = this._events[i][1];\n\t\t\t\tel.on(ev);\n\t\t\t}\n\t\t},\n\n\t\t_detachEvents: function () {\n\t\t\tfor (var i = 0, el, ev; i < this._events.length; i++) {\n\t\t\t\tel = this._events[i][0];\n\t\t\t\tev = this._events[i][1];\n\t\t\t\tel.off(ev);\n\t\t\t}\n\t\t\tthis._events = [];\n\t\t},\n\n\t\tshow: function (e) {\n\t\t\tthis.picker.show();\n\t\t\tthis.height = this.component ? this.component.outerHeight() : this.element.outerHeight();\n\t\t\tif (this.forceParse) {\n\t\t\t\tthis.update();\n\t\t\t}\n\t\t\tthis.place();\n\t\t\t$(window).on('resize', $.proxy(this.place, this));\n\t\t\tif (e) {\n\t\t\t\te.stopPropagation();\n\t\t\t\te.preventDefault();\n\t\t\t}\n\t\t\tthis.isVisible = true;\n\t\t\tthis.element.trigger({\n\t\t\t\ttype: 'show',\n\t\t\t\tdate: this.date\n\t\t\t});\n\t\t},\n\n\t\thide: function (e) {\n\t\t\tif (!this.isVisible) return;\n\t\t\tif (this.isInline) return;\n\t\t\tthis.picker.hide();\n\t\t\t$(window).off('resize', this.place);\n\t\t\tthis.viewMode = this.startViewMode;\n\t\t\tthis.showMode();\n\t\t\tif (!this.isInput) {\n\t\t\t\t$(document).off('mousedown', this.hide);\n\t\t\t}\n\n\t\t\tif (\n\t\t\t\tthis.forceParse &&\n\t\t\t\t\t(\n\t\t\t\t\t\tthis.isInput && this.element.val() ||\n\t\t\t\t\t\t\tthis.hasInput && this.element.find('input').val()\n\t\t\t\t\t\t)\n\t\t\t\t)\n\t\t\t\tthis.setValue();\n\t\t\tthis.isVisible = false;\n\t\t\tthis.element.trigger({\n\t\t\t\ttype: 'hide',\n\t\t\t\tdate: this.date\n\t\t\t});\n\t\t},\n\n\t\tremove: function () {\n\t\t\tthis._detachEvents();\n\t\t\tthis.picker.remove();\n\t\t\tdelete this.picker;\n\t\t\tdelete this.element.data().datetimepicker;\n\t\t},\n\n\t\tgetDate: function () {\n\t\t\tvar d = this.getUTCDate();\n\t\t\treturn new Date(d.getTime() + (d.getTimezoneOffset() * 60000));\n\t\t},\n\n\t\tgetUTCDate: function () {\n\t\t\treturn this.date;\n\t\t},\n\n\t\tsetDate: function (d) {\n\t\t\tthis.setUTCDate(new Date(d.getTime() - (d.getTimezoneOffset() * 60000)));\n\t\t},\n\n\t\tsetUTCDate: function (d) {\n\t\t\tif (d >= this.startDate && d <= this.endDate) {\n\t\t\t\tthis.date = d;\n\t\t\t\tthis.setValue();\n\t\t\t\tthis.viewDate = this.date;\n\t\t\t\tthis.fill();\n\t\t\t} else {\n\t\t\t\tthis.element.trigger({\n\t\t\t\t\ttype:      'outOfRange',\n\t\t\t\t\tdate:      d,\n\t\t\t\t\tstartDate: this.startDate,\n\t\t\t\t\tendDate:   this.endDate\n\t\t\t\t});\n\t\t\t}\n\t\t},\n\n\t\tsetFormat: function (format) {\n\t\t\tthis.format = DPGlobal.parseFormat(format, this.formatType);\n\t\t\tvar element;\n\t\t\tif (this.isInput) {\n\t\t\t\telement = this.element;\n\t\t\t} else if (this.component) {\n\t\t\t\telement = this.element.find('input');\n\t\t\t}\n\t\t\tif (element && element.val()) {\n\t\t\t\tthis.setValue();\n\t\t\t}\n\t\t},\n\n\t\tsetValue: function () {\n\t\t\tvar formatted = this.getFormattedDate();\n\t\t\tif (!this.isInput) {\n\t\t\t\tif (this.component) {\n\t\t\t\t\tthis.element.find('input').val(formatted);\n\t\t\t\t}\n\t\t\t\tthis.element.data('date', formatted);\n\t\t\t} else {\n\t\t\t\tthis.element.val(formatted);\n\t\t\t}\n\t\t\tif (this.linkField) {\n\t\t\t\t$('#' + this.linkField).val(this.getFormattedDate(this.linkFormat));\n\t\t\t}\n\t\t},\n\n\t\tgetFormattedDate: function (format) {\n\t\t\tif (format == undefined) format = this.format;\n\t\t\treturn DPGlobal.formatDate(this.date, format, this.language, this.formatType);\n\t\t},\n\n\t\tsetStartDate: function (startDate) {\n\t\t\tthis.startDate = startDate || -Infinity;\n\t\t\tif (this.startDate !== -Infinity) {\n\t\t\t\tthis.startDate = DPGlobal.parseDate(this.startDate, this.format, this.language, this.formatType);\n\t\t\t}\n\t\t\tthis.update();\n\t\t\tthis.updateNavArrows();\n\t\t},\n\n\t\tsetEndDate: function (endDate) {\n\t\t\tthis.endDate = endDate || Infinity;\n\t\t\tif (this.endDate !== Infinity) {\n\t\t\t\tthis.endDate = DPGlobal.parseDate(this.endDate, this.format, this.language, this.formatType);\n\t\t\t}\n\t\t\tthis.update();\n\t\t\tthis.updateNavArrows();\n\t\t},\n\n\t\tsetDaysOfWeekDisabled: function (daysOfWeekDisabled) {\n\t\t\tif(this.element.is('#StartAirDateVal')) {\n\t\t\t\tdaysOfWeekDisabled = \"0,6\";\t\n\t\t\t}\n\t\t\tthis.daysOfWeekDisabled = daysOfWeekDisabled || [];\n\t\t\tif (!$.isArray(this.daysOfWeekDisabled)) {\n\t\t\t\tthis.daysOfWeekDisabled = this.daysOfWeekDisabled.split(/,\\s*/);\n\t\t\t}\n\t\t\tthis.daysOfWeekDisabled = $.map(this.daysOfWeekDisabled, function (d) {\n\t\t\t\treturn parseInt(d, 10);\n\t\t\t});\n\t\t\tthis.update();\n\t\t\tthis.updateNavArrows();\n\t\t},\n\n\t\tplace: function () {\n\t\t\tif (this.isInline) return;\n\n\t\t\tvar index_highest = 0;\n\t\t\t$('div').each(function () {\n\t\t\t\tvar index_current = parseInt($(this).css(\"zIndex\"), 10);\n\t\t\t\tif (index_current > index_highest) {\n\t\t\t\t\tindex_highest = index_current;\n\t\t\t\t}\n\t\t\t});\n\t\t\tvar zIndex = index_highest + 10;\n\n\t\t\tvar offset, top, left;\n\t\t\tif (this.component) {\n\t\t\t\toffset = this.component.offset();\n\t\t\t\tleft = offset.left;\n\t\t\t\tif (this.pickerPosition == 'bottom-left' || this.pickerPosition == 'top-left') {\n\t\t\t\t\tleft += this.component.outerWidth() - this.picker.outerWidth();\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\toffset = this.element.offset();\n\t\t\t\tleft = offset.left;\n\t\t\t}\n\t\t\tif (this.pickerPosition == 'top-left' || this.pickerPosition == 'top-right') {\n\t\t\t\ttop = offset.top - this.picker.outerHeight();\n\t\t\t} else {\n\t\t\t\ttop = offset.top + this.height;\n\t\t\t}\n\t\t\tthis.picker.css({\n\t\t\t\ttop:    top,\n\t\t\t\tleft:   left,\n\t\t\t\tzIndex: zIndex\n\t\t\t});\n\t\t},\n\n\t\tupdate: function () {\n\t\t\tvar date, fromArgs = false;\n\t\t\tif (arguments && arguments.length && (typeof arguments[0] === 'string' || arguments[0] instanceof Date)) {\n\t\t\t\tdate = arguments[0];\n\t\t\t\tfromArgs = true;\n\t\t\t} else {\n\t\t\t\tdate = this.element.data('date') || (this.isInput ? this.element.val() : this.element.find('input').val()) || this.initialDate;\n\t\t\t\tif (typeof date == 'string' || date instanceof String) {\n\t\t\t\t  date = date.replace(/^\\s+|\\s+$/g,'');\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (!date) {\n\t\t\t\tdate = new Date();\n\t\t\t\tfromArgs = false;\n\t\t\t}\n\n\t\t\tthis.date = DPGlobal.parseDate(date, this.format, this.language, this.formatType);\n\n\t\t\tif (fromArgs) this.setValue();\n\n\t\t\tif (this.date < this.startDate) {\n\t\t\t\tthis.viewDate = new Date(this.startDate);\n\t\t\t} else if (this.date > this.endDate) {\n\t\t\t\tthis.viewDate = new Date(this.endDate);\n\t\t\t} else {\n\t\t\t\tthis.viewDate = new Date(this.date);\n\t\t\t}\n\t\t\tthis.fill();\n\t\t},\n\n\t\tfillDow: function () {\n\t\t\tvar dowCnt = this.weekStart,\n\t\t\t\thtml = '<tr>';\n\t\t\twhile (dowCnt < this.weekStart + 7) {\n\t\t\t\thtml += '<th class=\"dow\">' + dates[this.language].daysMin[(dowCnt++) % 7] + '</th>';\n\t\t\t}\n\t\t\thtml += '</tr>';\n\t\t\tthis.picker.find('.datetimepicker-days thead').append(html);\n\t\t},\n\n\t\tfillMonths: function () {\n\t\t\tvar html = '',\n\t\t\t\ti = 0;\n\t\t\twhile (i < 12) {\n\t\t\t\thtml += '<span class=\"month\">' + dates[this.language].monthsShort[i++] + '</span>';\n\t\t\t}\n\t\t\tthis.picker.find('.datetimepicker-months td').html(html);\n\t\t},\n\n\t\tfill: function () {\n\t\t\tif (this.date == null || this.viewDate == null) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tvar d = new Date(this.viewDate),\n\t\t\t\tyear = d.getUTCFullYear(),\n\t\t\t\tmonth = d.getUTCMonth(),\n\t\t\t\tdayMonth = d.getUTCDate(),\n\t\t\t\thours = d.getUTCHours(),\n\t\t\t\tminutes = d.getUTCMinutes(),\n\t\t\t\tstartYear = this.startDate !== -Infinity ? this.startDate.getUTCFullYear() : -Infinity,\n\t\t\t\tstartMonth = this.startDate !== -Infinity ? this.startDate.getUTCMonth() : -Infinity,\n\t\t\t\tendYear = this.endDate !== Infinity ? this.endDate.getUTCFullYear() : Infinity,\n\t\t\t\tendMonth = this.endDate !== Infinity ? this.endDate.getUTCMonth() : Infinity,\n\t\t\t\tcurrentDate = (new UTCDate(this.date.getUTCFullYear(), this.date.getUTCMonth(), this.date.getUTCDate())).valueOf(),\n\t\t\t\ttoday = new Date();\n\t\t\tthis.picker.find('.datetimepicker-days thead th:eq(1)')\n\t\t\t\t.text(dates[this.language].months[month] + ' ' + year);\n\t\t\tif (this.formatViewType == \"time\") {\n\t\t\t\tvar hourConverted = hours % 12 ? hours % 12 : 12;\n\t\t\t\tvar hoursDisplay = (hourConverted < 10 ? '0' : '') + hourConverted;\n\t\t\t\tvar minutesDisplay = (minutes < 10 ? '0' : '') + minutes;\n\t\t\t\tvar meridianDisplay = dates[this.language].meridiem[hours < 12 ? 0 : 1];\n\t\t\t\tthis.picker.find('.datetimepicker-hours thead th:eq(1)')\n\t\t\t\t\t.text(hoursDisplay + ':' + minutesDisplay + ' ' + meridianDisplay.toUpperCase());\n\t\t\t\tthis.picker.find('.datetimepicker-minutes thead th:eq(1)')\n\t\t\t\t\t.text(hoursDisplay + ':' + minutesDisplay + ' ' + meridianDisplay.toUpperCase());\n\t\t\t} else {\n\t\t\t\tthis.picker.find('.datetimepicker-hours thead th:eq(1)')\n\t\t\t\t\t.text(dayMonth + ' ' + dates[this.language].months[month] + ' ' + year);\n\t\t\t\tthis.picker.find('.datetimepicker-minutes thead th:eq(1)')\n\t\t\t\t\t.text(dayMonth + ' ' + dates[this.language].months[month] + ' ' + year);\n\t\t\t}\n\t\t\tthis.picker.find('tfoot th.today')\n\t\t\t\t.text(dates[this.language].today)\n\t\t\t\t.toggle(this.todayBtn !== false);\n\t\t\tthis.updateNavArrows();\n\t\t\tthis.fillMonths();\n\t\t\t/*var prevMonth = UTCDate(year, month, 0,0,0,0,0);\n\t\t\t prevMonth.setUTCDate(prevMonth.getDate() - (prevMonth.getUTCDay() - this.weekStart + 7)%7);*/\n\t\t\tvar prevMonth = UTCDate(year, month - 1, 28, 0, 0, 0, 0),\n\t\t\t\tday = DPGlobal.getDaysInMonth(prevMonth.getUTCFullYear(), prevMonth.getUTCMonth());\n\t\t\tprevMonth.setUTCDate(day);\n\t\t\tprevMonth.setUTCDate(day - (prevMonth.getUTCDay() - this.weekStart + 7) % 7);\n\t\t\tvar nextMonth = new Date(prevMonth);\n\t\t\tnextMonth.setUTCDate(nextMonth.getUTCDate() + 42);\n\t\t\tnextMonth = nextMonth.valueOf();\n\t\t\tvar html = [];\n\t\t\tvar clsName;\n\t\t\twhile (prevMonth.valueOf() < nextMonth) {\n\t\t\t\tif (prevMonth.getUTCDay() == this.weekStart) {\n\t\t\t\t\thtml.push('<tr>');\n\t\t\t\t}\n\t\t\t\tclsName = '';\n\t\t\t\tif (prevMonth.getUTCFullYear() < year || (prevMonth.getUTCFullYear() == year && prevMonth.getUTCMonth() < month)) {\n\t\t\t\t\tclsName += ' old';\n\t\t\t\t} else if (prevMonth.getUTCFullYear() > year || (prevMonth.getUTCFullYear() == year && prevMonth.getUTCMonth() > month)) {\n\t\t\t\t\tclsName += ' new';\n\t\t\t\t}\n\t\t\t\t// Compare internal UTC date with local today, not UTC today\n\t\t\t\tif (this.todayHighlight &&\n\t\t\t\t\tprevMonth.getUTCFullYear() == today.getFullYear() &&\n\t\t\t\t\tprevMonth.getUTCMonth() == today.getMonth() &&\n\t\t\t\t\tprevMonth.getUTCDate() == today.getDate()) {\n\t\t\t\t\tclsName += ' today';\n\t\t\t\t}\n\t\t\t\tif (prevMonth.valueOf() == currentDate) {\n\t\t\t\t\tclsName += ' active';\n\t\t\t\t}\n\t\t\t\tif ((prevMonth.valueOf() + 86400000) <= this.startDate || prevMonth.valueOf() > this.endDate ||\n\t\t\t\t\t$.inArray(prevMonth.getUTCDay(), this.daysOfWeekDisabled) !== -1) {\n\t\t\t\t\tclsName += ' disabled';\n\t\t\t\t}\n\t\t\t\thtml.push('<td class=\"day' + clsName + '\">' + prevMonth.getUTCDate() + '</td>');\n\t\t\t\tif (prevMonth.getUTCDay() == this.weekEnd) {\n\t\t\t\t\thtml.push('</tr>');\n\t\t\t\t}\n\t\t\t\tprevMonth.setUTCDate(prevMonth.getUTCDate() + 1);\n\t\t\t}\n\t\t\tthis.picker.find('.datetimepicker-days tbody').empty().append(html.join(''));\n\t\t\n\t\t\thtml = [];\n\t\t\tvar txt = '', meridian = '', meridianOld = '';\n\t\t\tfor (var i = 0; i < 24; i++) {\n\t\t\t\tvar actual = UTCDate(year, month, dayMonth, i);\n\t\t\t\tclsName = '';\n\t\t\t\tvar tooltip = '';\n\n\t\t\t\t// datepicker conditions exclusively for airport one way\n\t\t\t\tif(this.element.is(\"#StartAirDateVal\")) {\n\t\t\t\t\tif (actual.getUTCDay()==5) {\n\t\t\t\t\t\tif ((actual.valueOf() + 3600000) <= this.startDate || actual.valueOf() > this.endDate || (i >= 20)) {\n\t\t\t\t\t\t\tclsName += ' disabled';\n\t\t\t\t\t\t\tif(i >= 20){\n\t\t\t\t\t\t\t\t// added tooltip over disabled time slots\n\t\t\t\t\t\t\t\ttooltip = 'data-toggle=\"tooltip\" data-trigger=\"click\" data-placement=\"bottom\" title=\"Pickup locations are closed  after 8PM on Friday \"';\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else if (hours == i) {\n\t\t\t\t\t\t\t\tclsName += ' active';\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse if (actual.getUTCDay()==6){\n\t\t\t\t\t\tif ((actual.valueOf() + 3600000) <= this.startDate || actual.valueOf() > this.endDate || (i != 24)) {\n\t\t\t\t\t\t\tclsName += ' disabled';\n\t\t\t\t\t\t\tif(i !=24){\n\t\t\t\t\t\t\t\t// added tooltip over disabled time slots\n\t\t\t\t\t\t\t\ttooltip = 'data-toggle=\"tooltip\" data-trigger=\"click\" data-placement=\"bottom\" title=\"Pickup locations are closed on Saturday\"';\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else if (hours == i) {\n\t\t\t\t\t\t\t\tclsName += ' active';\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse if (actual.getUTCDay()==0){\n\t\t\t\t\t\tif ((actual.valueOf() + 3600000) <= this.startDate || actual.valueOf() > this.endDate || (i != 24)) {\n\t\t\t\t\t\t\tclsName += ' disabled';\n\t\t\t\t\t\t\tif(i !=24){\n\t\t\t\t\t\t\t\t// added tooltip over disabled time slots\n\t\t\t\t\t\t\t\ttooltip = 'data-toggle=\"tooltip\" data-trigger=\"click\" data-placement=\"bottom\" title=\"Pickup locations are closed on Sunday\"';\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else if (hours == i) {\n\t\t\t\t\t\t\t\tclsName += ' active';\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse if (actual.getUTCDay()==1){\n\t\t\t\t\t\tif ((actual.valueOf() + 3600000) <= this.startDate || actual.valueOf() > this.endDate || (i >= 0 && i < 3)) {\n\t\t\t\t\t\t\tclsName += ' disabled';\n\t\t\t\t\t\t\tif(i >= 0 && i < 3){\n\t\t\t\t\t\t\t\t// added tooltip over disabled time slots\n\t\t\t\t\t\t\t\ttooltip = 'data-toggle=\"tooltip\" data-trigger=\"click\" data-placement=\"bottom\" title=\"Pickup locations are closed 12am-3am on Monday\"';\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else if (hours == i) {\n\t\t\t\t\t\t\t\tclsName += ' active';\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\t if ((actual.valueOf() + 3600000) <= this.startDate || actual.valueOf() > this.endDate || (i == 24 )) {\n\t\t\t\t\t\t\tclsName += ' disabled';\n\t\t\t\t\t\t} else if (hours == i) {\n\t\t\t\t\t\t\tclsName += ' active';\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\t// We want the previous hour for the startDate\n\t\t\t\t\t// last OR condition used for disabling time between 00:00 hours and 06:00 hours\n\t\t\t\t\tif((actual.valueOf() + 3600000) <= this.startDate || actual.valueOf() > this.endDate || ((i >= 0 && i <= 5))) {\n\t\t\t\t\t\t// below if is to disable 00:00 to 6:00 for chauffeur\n\t\t\t\t\t\tif(this.element.is(\"#StartChauffeurDateVal\")) {\n\t\t\t\t\t\t\tclsName += ' disabled';\n\t\t\t\t\t\t\ttooltip = 'data-toggle=\"tooltip\" data-trigger=\"click\" data-placement=\"bottom\" title=\"Pickup locations are closed 12am-6am\"';\n\t\t\t\t\t\t}\telse if(enable_full_hours == \"false\") {\n\t\t\t\t\t\t\tclsName += ' disabled';\n\t\t\t\t\t\t\ttooltip = 'data-toggle=\"tooltip\" data-trigger=\"click\" data-placement=\"bottom\" title=\"Pickup locations are closed 12am-6am\"';\n\t\t\t\t\t\t} else if ((actual.valueOf() + 3600000) <= this.startDate || actual.valueOf() > this.endDate ) {\n\t\t\t\t\t\t\tclsName += ' disabled';\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse if (hours == i) {\n\t\t\t\t\t\tclsName += ' active';\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tif (this.showMeridian && dates[this.language].meridiem.length == 2) {\n\t\t\t\t\tmeridian = (i < 12 ? dates[this.language].meridiem[0] : dates[this.language].meridiem[1]);\n\t\t\t\t\tif (meridian != meridianOld) {\n\t\t\t\t\t\tif (meridianOld != '') {\n\t\t\t\t\t\t\thtml.push('</fieldset>');\n\t\t\t\t\t\t}\n\t\t\t\t\t\thtml.push('<fieldset class=\"hour\"><legend>' + meridian.toUpperCase() + '</legend>');\n\t\t\t\t\t}\n\t\t\t\t\tmeridianOld = meridian;\n\t\t\t\t\ttxt = (i % 12 ? i % 12 : 12);\n\t\t\t\t\thtml.push('<span class=\"hour' + clsName + ' hour_' + (i < 12 ? 'am' : 'pm') + '\" ' + tooltip + '>' + txt + '</span>');\n\t\t\t\t\tif (i == 23) {\n\t\t\t\t\t\thtml.push('</fieldset>');\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\ttxt = i + ':00';\n\t\t\t\t\thtml.push('<span class=\"hour' + clsName + '\" ' + tooltip + '>' + txt + '</span>');\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis.picker.find('.datetimepicker-hours td').html(html.join(''));\n\n\t\t\thtml = [];\n\t\t\ttxt = '', meridian = '', meridianOld = '';\n\t\t\tfor (var i = 0; i < 60; i += this.minuteStep) {\n\t\t\t\tvar actual = UTCDate(year, month, dayMonth, hours, i, 0);\n\t\t\t\tclsName = '';\n\t\t\t\tvar indianDate = new Date(actual - (330 * 60000));\n\t\t\t\t\n\t\t\t\t// Custom code for airport one way\n\t\t\t\tif(this.element.is(\"#StartAirDateVal\")) {\n\t\t\t\t\tif (actual.getUTCDay()==5) {\n\t\t\t\t\t\tif (actual.valueOf() < this.startDate || actual.valueOf() > this.endDate || indianDate.getHours() >= 20) {\n\t\t\t\t\t\t\tclsName += ' disabled';\n\t\t\t\t\t\t} else if (Math.floor(minutes / this.minuteStep) == Math.floor(i / this.minuteStep)) {\n\t\t\t\t\t\t\tclsName += ' active';\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse if (actual.getUTCDay()==1){\n\t\t\t\t\t\tif (actual.valueOf() < this.startDate || actual.valueOf() > this.endDate || (indianDate.getHours() >= 0 && indianDate.getHours() < 3)) {\n\t\t\t\t\t\t\tclsName += ' disabled';\n\t\t\t\t\t\t} else if (Math.floor(minutes / this.minuteStep) == Math.floor(i / this.minuteStep)) {\n\t\t\t\t\t\t\tclsName += ' active';\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse if (actual.getUTCDay()==6){\n\t\t\t\t\t\tif (actual.valueOf() < this.startDate || actual.valueOf() > this.endDate || (indianDate.getHours() >= 0 && indianDate.getHours() < 24)) {\n\t\t\t\t\t\t\tclsName += ' disabled';\n\t\t\t\t\t\t} else if (Math.floor(minutes / this.minuteStep) == Math.floor(i / this.minuteStep)) {\n\t\t\t\t\t\t\tclsName += ' active';\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse if (actual.getUTCDay()==0){\n\t\t\t\t\t\tif (actual.valueOf() < this.startDate || actual.valueOf() > this.endDate || (indianDate.getHours() >= 0 && indianDate.getHours() < 24)) {\n\t\t\t\t\t\t\tclsName += ' disabled';\n\t\t\t\t\t\t} else if (Math.floor(minutes / this.minuteStep) == Math.floor(i / this.minuteStep)) {\n\t\t\t\t\t\t\tclsName += ' active';\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tif (actual.valueOf() < this.startDate || actual.valueOf() > this.endDate || (indianDate.getHours() > 23)) {\n\t\t\t\t\t\t\tclsName += ' disabled';\n\t\t\t\t\t\t} else if (Math.floor(minutes / this.minuteStep) == Math.floor(i / this.minuteStep)) {\n\t\t\t\t\t\t\tclsName += ' active';\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\t// code to prevent selection of time from 12 am to 6 am\n\t\t\t\t\tif (actual.valueOf() < this.startDate || actual.valueOf() > this.endDate || ((indianDate.getHours() >= 0 && indianDate.getHours() < 6))) {\n\t\t\t\t\t\t// below if is to disable 00:00 to 6:00 for chauffeur\n\t\t\t\t\t\tif(this.element.is(\"#StartChauffeurDateVal\")){\n\t\t\t\t\t\t\tclsName += ' disabled';\n\t\t\t\t\t\t} else if(enable_full_hours == \"false\") {\n\t\t\t\t\t\t\tclsName += ' disabled';\n\t\t\t\t\t\t} else if (actual.valueOf() < this.startDate || actual.valueOf() > this.endDate) {\n\t\t\t\t\t\t\tclsName += ' disabled';\t\n\t\t\t\t\t\t}\n\t\t\t\t\t} else if (Math.floor(minutes / this.minuteStep) == Math.floor(i / this.minuteStep)) {\n\t\t\t\t\t\tclsName += ' active';\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (this.showMeridian && dates[this.language].meridiem.length == 2) {\n\t\t\t\t\tmeridian = (hours < 12 ? dates[this.language].meridiem[0] : dates[this.language].meridiem[1]);\n\t\t\t\t\tif (meridian != meridianOld) {\n\t\t\t\t\t\tif (meridianOld != '') {\n\t\t\t\t\t\t\thtml.push('</fieldset>');\n\t\t\t\t\t\t}\n\t\t\t\t\t\thtml.push('<fieldset class=\"minute\"><legend>' + meridian.toUpperCase() + '</legend>');\n\t\t\t\t\t}\n\t\t\t\t\tmeridianOld = meridian;\n\t\t\t\t\ttxt = (hours % 12 ? hours % 12 : 12);\n\t\t\t\t\t//html.push('<span class=\"minute'+clsName+' minute_'+(hours<12?'am':'pm')+'\">'+txt+'</span>');\n\t\t\t\t\thtml.push('<span class=\"minute' + clsName + '\">' + txt + ':' + (i < 10 ? '0' + i : i) + '</span>');\n\t\t\t\t\tif (i == 59) {\n\t\t\t\t\t\thtml.push('</fieldset>');\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\ttxt = i + ':00';\n\t\t\t\t\t//html.push('<span class=\"hour'+clsName+'\">'+txt+'</span>');\n\t\t\t\t\thtml.push('<span class=\"minute' + clsName + '\">' + hours + ':' + (i < 10 ? '0' + i : i) + '</span>');\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis.picker.find('.datetimepicker-minutes td').html(html.join(''));\n\n\t\t\tvar currentYear = this.date.getUTCFullYear();\n\t\t\tvar months = this.picker.find('.datetimepicker-months')\n\t\t\t\t.find('th:eq(1)')\n\t\t\t\t.text(year)\n\t\t\t\t.end()\n\t\t\t\t.find('span').removeClass('active');\n\t\t\tif (currentYear == year) {\n\t\t\t\tmonths.eq(this.date.getUTCMonth()).addClass('active');\n\t\t\t}\n\t\t\tif (year < startYear || year > endYear) {\n\t\t\t\tmonths.addClass('disabled');\n\t\t\t}\n\t\t\tif (year == startYear) {\n\t\t\t\tmonths.slice(0, startMonth).addClass('disabled');\n\t\t\t}\n\t\t\tif (year == endYear) {\n\t\t\t\tmonths.slice(endMonth + 1).addClass('disabled');\n\t\t\t}\n\n\t\t\thtml = '';\n\t\t\tyear = parseInt(year / 10, 10) * 10;\n\t\t\tvar yearCont = this.picker.find('.datetimepicker-years')\n\t\t\t\t.find('th:eq(1)')\n\t\t\t\t.text(year + '-' + (year + 9))\n\t\t\t\t.end()\n\t\t\t\t.find('td');\n\t\t\tyear -= 1;\n\t\t\tfor (var i = -1; i < 11; i++) {\n\t\t\t\thtml += '<span class=\"year' + (i == -1 || i == 10 ? ' old' : '') + (currentYear == year ? ' active' : '') + (year < startYear || year > endYear ? ' disabled' : '') + '\">' + year + '</span>';\n\t\t\t\tyear += 1;\n\t\t\t}\n\t\t\tyearCont.html(html);\n\t\t\tthis.place();\n\t\t\t$('[data-toggle=\"tooltip\"]').tooltip();\n\t\t\t$('.hour').on('show.bs.tooltip', function() {\n\t\t\t    // Only one tooltip should ever be open at a icon-time\n\t\t\t    $('.table-condensed').on('click', function (e) {\n\t\t\t    \tif(parseInt(e.target.innerText, 10) > 5){\n\t\t\t    \t\t$('.tooltip').hide();\n\t\t\t    \t}\n\t\t\t\t});\n\t\t\t    $('.hour').not(this).tooltip('hide');\n\t\t\t});\n\t\t},\n\n\t\tupdateNavArrows: function () {\n\t\t\tvar d = new Date(this.viewDate),\n\t\t\t\tyear = d.getUTCFullYear(),\n\t\t\t\tmonth = d.getUTCMonth(),\n\t\t\t\tday = d.getUTCDate(),\n\t\t\t\thour = d.getUTCHours();\n\t\t\tswitch (this.viewMode) {\n\t\t\t\tcase 0:\n\t\t\t\t\tif (this.startDate !== -Infinity && year <= this.startDate.getUTCFullYear()\n\t\t\t\t\t\t&& month <= this.startDate.getUTCMonth()\n\t\t\t\t\t\t&& day <= this.startDate.getUTCDate()\n\t\t\t\t\t\t&& hour <= this.startDate.getUTCHours()) {\n\t\t\t\t\t\tthis.picker.find('.prev').css({visibility: 'hidden'});\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis.picker.find('.prev').css({visibility: 'visible'});\n\t\t\t\t\t}\n\t\t\t\t\tif (this.endDate !== Infinity && year >= this.endDate.getUTCFullYear()\n\t\t\t\t\t\t&& month >= this.endDate.getUTCMonth()\n\t\t\t\t\t\t&& day >= this.endDate.getUTCDate()\n\t\t\t\t\t\t&& hour >= this.endDate.getUTCHours()) {\n\t\t\t\t\t\tthis.picker.find('.next').css({visibility: 'hidden'});\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis.picker.find('.next').css({visibility: 'visible'});\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\tcase 1:\n\t\t\t\t\tif (this.startDate !== -Infinity && year <= this.startDate.getUTCFullYear()\n\t\t\t\t\t\t&& month <= this.startDate.getUTCMonth()\n\t\t\t\t\t\t&& day <= this.startDate.getUTCDate()) {\n\t\t\t\t\t\tthis.picker.find('.prev').css({visibility: 'hidden'});\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis.picker.find('.prev').css({visibility: 'visible'});\n\t\t\t\t\t}\n\t\t\t\t\tif (this.endDate !== Infinity && year >= this.endDate.getUTCFullYear()\n\t\t\t\t\t\t&& month >= this.endDate.getUTCMonth()\n\t\t\t\t\t\t&& day >= this.endDate.getUTCDate()) {\n\t\t\t\t\t\tthis.picker.find('.next').css({visibility: 'hidden'});\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis.picker.find('.next').css({visibility: 'visible'});\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\tcase 2:\n\t\t\t\t\tif (this.startDate !== -Infinity && year <= this.startDate.getUTCFullYear()\n\t\t\t\t\t\t&& month <= this.startDate.getUTCMonth()) {\n\t\t\t\t\t\tthis.picker.find('.prev').css({visibility: 'hidden'});\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis.picker.find('.prev').css({visibility: 'visible'});\n\t\t\t\t\t}\n\t\t\t\t\tif (this.endDate !== Infinity && year >= this.endDate.getUTCFullYear()\n\t\t\t\t\t\t&& month >= this.endDate.getUTCMonth()) {\n\t\t\t\t\t\tthis.picker.find('.next').css({visibility: 'hidden'});\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis.picker.find('.next').css({visibility: 'visible'});\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\tcase 3:\n\t\t\t\tcase 4:\n\t\t\t\t\tif (this.startDate !== -Infinity && year <= this.startDate.getUTCFullYear()) {\n\t\t\t\t\t\tthis.picker.find('.prev').css({visibility: 'hidden'});\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis.picker.find('.prev').css({visibility: 'visible'});\n\t\t\t\t\t}\n\t\t\t\t\tif (this.endDate !== Infinity && year >= this.endDate.getUTCFullYear()) {\n\t\t\t\t\t\tthis.picker.find('.next').css({visibility: 'hidden'});\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis.picker.find('.next').css({visibility: 'visible'});\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t},\n\n\t\tmousewheel: function (e) {\n\n\t\t\te.preventDefault();\n\t\t\te.stopPropagation();\n\n\t\t\tif (this.wheelPause) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tthis.wheelPause = true;\n\n\t\t\tvar originalEvent = e.originalEvent;\n\n\t\t\tvar delta = originalEvent.wheelDelta;\n\n\t\t\tvar mode = delta > 0 ? 1 : (delta === 0) ? 0 : -1;\n\n\t\t\tif (this.wheelViewModeNavigationInverseDirection) {\n\t\t\t\tmode = -mode;\n\t\t\t}\n\n\t\t\tthis.showMode(mode);\n\n\t\t\tsetTimeout($.proxy(function () {\n\n\t\t\t\tthis.wheelPause = false\n\n\t\t\t}, this), this.wheelViewModeNavigationDelay);\n\n\t\t},\n\n\t\tclick: function (e) {\n\t\t\te.stopPropagation();\n\t\t\te.preventDefault();\n\t\t\tvar target = $(e.target).closest('span, td, th, legend');\n\t\t\tif (target.length == 1) {\n\t\t\t\tif (target.is('.disabled')) {\n\t\t\t\t\tthis.element.trigger({\n\t\t\t\t\t\ttype:      'outOfRange',\n\t\t\t\t\t\tdate:      this.viewDate,\n\t\t\t\t\t\tstartDate: this.startDate,\n\t\t\t\t\t\tendDate:   this.endDate\n\t\t\t\t\t});\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tswitch (target[0].nodeName.toLowerCase()) {\n\t\t\t\t\tcase 'th':\n\t\t\t\t\t\tswitch (target[0].className) {\n\t\t\t\t\t\t\tcase 'switch':\n\t\t\t\t\t\t\t\tthis.showMode(1);\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\tcase 'prev':\n\t\t\t\t\t\t\tcase 'next':\n\t\t\t\t\t\t\t\tvar dir = DPGlobal.modes[this.viewMode].navStep * (target[0].className == 'prev' ? -1 : 1);\n\t\t\t\t\t\t\t\tswitch (this.viewMode) {\n\t\t\t\t\t\t\t\t\tcase 0:\n\t\t\t\t\t\t\t\t\t\tthis.viewDate = this.moveHour(this.viewDate, dir);\n\t\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t\tcase 1:\n\t\t\t\t\t\t\t\t\t\tthis.viewDate = this.moveDate(this.viewDate, dir);\n\t\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t\tcase 2:\n\t\t\t\t\t\t\t\t\t\tthis.viewDate = this.moveMonth(this.viewDate, dir);\n\t\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t\tcase 3:\n\t\t\t\t\t\t\t\t\tcase 4:\n\t\t\t\t\t\t\t\t\t\tthis.viewDate = this.moveYear(this.viewDate, dir);\n\t\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tthis.fill();\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\tcase 'today':\n\t\t\t\t\t\t\t\tvar date = new Date();\n\t\t\t\t\t\t\t\tdate = UTCDate(date.getFullYear(), date.getMonth(), date.getDate(), date.getHours(), date.getMinutes(), date.getSeconds(), 0);\n\n\t\t\t\t\t\t\t\t// Respect startDate and endDate.\n\t\t\t\t\t\t\t\tif (date < this.startDate) date = this.startDate;\n\t\t\t\t\t\t\t\telse if (date > this.endDate) date = this.endDate;\n\n\t\t\t\t\t\t\t\tthis.viewMode = this.startViewMode;\n\t\t\t\t\t\t\t\tthis.showMode(0);\n\t\t\t\t\t\t\t\tthis._setDate(date);\n\t\t\t\t\t\t\t\tthis.fill();\n\t\t\t\t\t\t\t\tif (this.autoclose) {\n\t\t\t\t\t\t\t\t\tthis.hide();\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'span':\n\t\t\t\t\t\tif (!target.is('.disabled')) {\n\t\t\t\t\t\t\tvar year = this.viewDate.getUTCFullYear(),\n\t\t\t\t\t\t\t\tmonth = this.viewDate.getUTCMonth(),\n\t\t\t\t\t\t\t\tday = this.viewDate.getUTCDate(),\n\t\t\t\t\t\t\t\thours = this.viewDate.getUTCHours(),\n\t\t\t\t\t\t\t\tminutes = this.viewDate.getUTCMinutes(),\n\t\t\t\t\t\t\t\tseconds = this.viewDate.getUTCSeconds();\n\n\t\t\t\t\t\t\tif (target.is('.month')) {\n\t\t\t\t\t\t\t\tthis.viewDate.setUTCDate(1);\n\t\t\t\t\t\t\t\tmonth = target.parent().find('span').index(target);\n\t\t\t\t\t\t\t\tday = this.viewDate.getUTCDate();\n\t\t\t\t\t\t\t\tthis.viewDate.setUTCMonth(month);\n\t\t\t\t\t\t\t\tthis.element.trigger({\n\t\t\t\t\t\t\t\t\ttype: 'changeMonth',\n\t\t\t\t\t\t\t\t\tdate: this.viewDate\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\tif (this.viewSelect >= 3) {\n\t\t\t\t\t\t\t\t\tthis._setDate(UTCDate(year, month, day, hours, minutes, seconds, 0));\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t} else if (target.is('.year')) {\n\t\t\t\t\t\t\t\tthis.viewDate.setUTCDate(1);\n\t\t\t\t\t\t\t\tyear = parseInt(target.text(), 10) || 0;\n\t\t\t\t\t\t\t\tthis.viewDate.setUTCFullYear(year);\n\t\t\t\t\t\t\t\tthis.element.trigger({\n\t\t\t\t\t\t\t\t\ttype: 'changeYear',\n\t\t\t\t\t\t\t\t\tdate: this.viewDate\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\tif (this.viewSelect >= 4) {\n\t\t\t\t\t\t\t\t\tthis._setDate(UTCDate(year, month, day, hours, minutes, seconds, 0));\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t} else if (target.is('.hour')) {\n\t\t\t\t\t\t\t\thours = parseInt(target.text(), 10) || 0;\n\t\t\t\t\t\t\t\tif (target.hasClass('hour_am') || target.hasClass('hour_pm')) {\n\t\t\t\t\t\t\t\t\tif (hours == 12 && target.hasClass('hour_am')) {\n\t\t\t\t\t\t\t\t\t\thours = 0;\n\t\t\t\t\t\t\t\t\t} else if (hours != 12 && target.hasClass('hour_pm')) {\n\t\t\t\t\t\t\t\t\t\thours += 12;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tthis.viewDate.setUTCHours(hours);\n\t\t\t\t\t\t\t\tthis.element.trigger({\n\t\t\t\t\t\t\t\t\ttype: 'changeHour',\n\t\t\t\t\t\t\t\t\tdate: this.viewDate\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\tif (this.viewSelect >= 1) {\n\t\t\t\t\t\t\t\t\tthis._setDate(UTCDate(year, month, day, hours, minutes, seconds, 0));\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t} else if (target.is('.minute')) {\n\t\t\t\t\t\t\t\tminutes = parseInt(target.text().substr(target.text().indexOf(':') + 1), 10) || 0;\n\t\t\t\t\t\t\t\tthis.viewDate.setUTCMinutes(minutes);\n\t\t\t\t\t\t\t\tthis.element.trigger({\n\t\t\t\t\t\t\t\t\ttype: 'changeMinute',\n\t\t\t\t\t\t\t\t\tdate: this.viewDate\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\tif (this.viewSelect >= 0) {\n\t\t\t\t\t\t\t\t\tthis._setDate(UTCDate(year, month, day, hours, minutes, seconds, 0));\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif (this.viewMode != 0) {\n\t\t\t\t\t\t\t\tvar oldViewMode = this.viewMode;\n\t\t\t\t\t\t\t\tthis.showMode(-1);\n\t\t\t\t\t\t\t\tthis.fill();\n\t\t\t\t\t\t\t\tif (oldViewMode == this.viewMode && this.autoclose) {\n\t\t\t\t\t\t\t\t\tthis.hide();\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tthis.fill();\n\t\t\t\t\t\t\t\tif (this.autoclose) {\n\t\t\t\t\t\t\t\t\tthis.hide();\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'td':\n\t\t\t\t\t\tif (target.is('.day') && !target.is('.disabled')) {\n\t\t\t\t\t\t\tvar day = parseInt(target.text(), 10) || 1;\n\t\t\t\t\t\t\tvar year = this.viewDate.getUTCFullYear(),\n\t\t\t\t\t\t\t\tmonth = this.viewDate.getUTCMonth(),\n\t\t\t\t\t\t\t\thours = this.viewDate.getUTCHours(),\n\t\t\t\t\t\t\t\tminutes = this.viewDate.getUTCMinutes(),\n\t\t\t\t\t\t\t\tseconds = this.viewDate.getUTCSeconds();\n\t\t\t\t\t\t\tif (target.is('.old')) {\n\t\t\t\t\t\t\t\tif (month === 0) {\n\t\t\t\t\t\t\t\t\tmonth = 11;\n\t\t\t\t\t\t\t\t\tyear -= 1;\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\tmonth -= 1;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t} else if (target.is('.new')) {\n\t\t\t\t\t\t\t\tif (month == 11) {\n\t\t\t\t\t\t\t\t\tmonth = 0;\n\t\t\t\t\t\t\t\t\tyear += 1;\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\tmonth += 1;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tthis.viewDate.setUTCFullYear(year);\n\t\t\t\t\t\t\tthis.viewDate.setUTCMonth(month, day);\n\t\t\t\t\t\t\tthis.element.trigger({\n\t\t\t\t\t\t\t\ttype: 'changeDay',\n\t\t\t\t\t\t\t\tdate: this.viewDate\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\tif (this.viewSelect >= 2) {\n\t\t\t\t\t\t\t\tthis._setDate(UTCDate(year, month, day, hours, minutes, seconds, 0));\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tvar oldViewMode = this.viewMode;\n\t\t\t\t\t\tthis.showMode(-1);\n\t\t\t\t\t\tthis.fill();\n\t\t\t\t\t\tif (oldViewMode == this.viewMode && this.autoclose) {\n\t\t\t\t\t\t\tthis.hide();\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\n\t\t_setDate: function (date, which) {\n\t\t\tif (!which || which == 'date')\n\t\t\t\tthis.date = date;\n\t\t\tif (!which || which == 'view')\n\t\t\t\tthis.viewDate = date;\n\t\t\tthis.fill();\n\t\t\tthis.setValue();\n\t\t\tvar element;\n\t\t\tif (this.isInput) {\n\t\t\t\telement = this.element;\n\t\t\t} else if (this.component) {\n\t\t\t\telement = this.element.find('input');\n\t\t\t}\n\t\t\tif (element) {\n\t\t\t\telement.change();\n\t\t\t\tif (this.autoclose && (!which || which == 'date')) {\n\t\t\t\t\t//this.hide();\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis.element.trigger({\n\t\t\t\ttype: 'changeDate',\n\t\t\t\tdate: this.date\n\t\t\t});\n\t\t},\n\n\t\tmoveMinute: function (date, dir) {\n\t\t\tif (!dir) return date;\n\t\t\tvar new_date = new Date(date.valueOf());\n\t\t\t//dir = dir > 0 ? 1 : -1;\n\t\t\tnew_date.setUTCMinutes(new_date.getUTCMinutes() + (dir * this.minuteStep));\n\t\t\treturn new_date;\n\t\t},\n\n\t\tmoveHour: function (date, dir) {\n\t\t\tif (!dir) return date;\n\t\t\tvar new_date = new Date(date.valueOf());\n\t\t\t//dir = dir > 0 ? 1 : -1;\n\t\t\tnew_date.setUTCHours(new_date.getUTCHours() + dir);\n\t\t\treturn new_date;\n\t\t},\n\n\t\tmoveDate: function (date, dir) {\n\t\t\tif (!dir) return date;\n\t\t\tvar new_date = new Date(date.valueOf());\n\t\t\t//dir = dir > 0 ? 1 : -1;\n\t\t\tnew_date.setUTCDate(new_date.getUTCDate() + dir);\n\t\t\treturn new_date;\n\t\t},\n\n\t\tmoveMonth: function (date, dir) {\n\t\t\tif (!dir) return date;\n\t\t\tvar new_date = new Date(date.valueOf()),\n\t\t\t\tday = new_date.getUTCDate(),\n\t\t\t\tmonth = new_date.getUTCMonth(),\n\t\t\t\tmag = Math.abs(dir),\n\t\t\t\tnew_month, test;\n\t\t\tdir = dir > 0 ? 1 : -1;\n\t\t\tif (mag == 1) {\n\t\t\t\ttest = dir == -1\n\t\t\t\t\t// If going back one month, make sure month is not current month\n\t\t\t\t\t// (eg, Mar 31 -> Feb 31 == Feb 28, not Mar 02)\n\t\t\t\t\t? function () {\n\t\t\t\t\treturn new_date.getUTCMonth() == month;\n\t\t\t\t}\n\t\t\t\t\t// If going forward one month, make sure month is as expected\n\t\t\t\t\t// (eg, Jan 31 -> Feb 31 == Feb 28, not Mar 02)\n\t\t\t\t\t: function () {\n\t\t\t\t\treturn new_date.getUTCMonth() != new_month;\n\t\t\t\t};\n\t\t\t\tnew_month = month + dir;\n\t\t\t\tnew_date.setUTCMonth(new_month);\n\t\t\t\t// Dec -> Jan (12) or Jan -> Dec (-1) -- limit expected date to 0-11\n\t\t\t\tif (new_month < 0 || new_month > 11)\n\t\t\t\t\tnew_month = (new_month + 12) % 12;\n\t\t\t} else {\n\t\t\t\t// For magnitudes >1, move one month at a time...\n\t\t\t\tfor (var i = 0; i < mag; i++)\n\t\t\t\t\t// ...which might decrease the day (eg, Jan 31 to Feb 28, etc)...\n\t\t\t\t\tnew_date = this.moveMonth(new_date, dir);\n\t\t\t\t// ...then reset the day, keeping it in the new month\n\t\t\t\tnew_month = new_date.getUTCMonth();\n\t\t\t\tnew_date.setUTCDate(day);\n\t\t\t\ttest = function () {\n\t\t\t\t\treturn new_month != new_date.getUTCMonth();\n\t\t\t\t};\n\t\t\t}\n\t\t\t// Common date-resetting loop -- if date is beyond end of month, make it\n\t\t\t// end of month\n\t\t\twhile (test()) {\n\t\t\t\tnew_date.setUTCDate(--day);\n\t\t\t\tnew_date.setUTCMonth(new_month);\n\t\t\t}\n\t\t\treturn new_date;\n\t\t},\n\n\t\tmoveYear: function (date, dir) {\n\t\t\treturn this.moveMonth(date, dir * 12);\n\t\t},\n\n\t\tdateWithinRange: function (date) {\n\t\t\treturn date >= this.startDate && date <= this.endDate;\n\t\t},\n\n\t\tkeydown: function (e) {\n\t\t\tif (this.picker.is(':not(:visible)')) {\n\t\t\t\tif (e.keyCode == 27) // allow escape to hide and re-show picker\n\t\t\t\t\tthis.show();\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tvar dateChanged = false,\n\t\t\t\tdir, day, month,\n\t\t\t\tnewDate, newViewDate;\n\t\t\tswitch (e.keyCode) {\n\t\t\t\tcase 27: // escape\n\t\t\t\t\tthis.hide();\n\t\t\t\t\te.preventDefault();\n\t\t\t\t\tbreak;\n\t\t\t\tcase 37: // left\n\t\t\t\tcase 39: // right\n\t\t\t\t\tif (!this.keyboardNavigation) break;\n\t\t\t\t\tdir = e.keyCode == 37 ? -1 : 1;\n\t\t\t\t\tviewMode = this.viewMode;\n\t\t\t\t\tif (e.ctrlKey) {\n\t\t\t\t\t\tviewMode += 2;\n\t\t\t\t\t} else if (e.shiftKey) {\n\t\t\t\t\t\tviewMode += 1;\n\t\t\t\t\t}\n\t\t\t\t\tif (viewMode == 4) {\n\t\t\t\t\t\tnewDate = this.moveYear(this.date, dir);\n\t\t\t\t\t\tnewViewDate = this.moveYear(this.viewDate, dir);\n\t\t\t\t\t} else if (viewMode == 3) {\n\t\t\t\t\t\tnewDate = this.moveMonth(this.date, dir);\n\t\t\t\t\t\tnewViewDate = this.moveMonth(this.viewDate, dir);\n\t\t\t\t\t} else if (viewMode == 2) {\n\t\t\t\t\t\tnewDate = this.moveDate(this.date, dir);\n\t\t\t\t\t\tnewViewDate = this.moveDate(this.viewDate, dir);\n\t\t\t\t\t} else if (viewMode == 1) {\n\t\t\t\t\t\tnewDate = this.moveHour(this.date, dir);\n\t\t\t\t\t\tnewViewDate = this.moveHour(this.viewDate, dir);\n\t\t\t\t\t} else if (viewMode == 0) {\n\t\t\t\t\t\tnewDate = this.moveMinute(this.date, dir);\n\t\t\t\t\t\tnewViewDate = this.moveMinute(this.viewDate, dir);\n\t\t\t\t\t}\n\t\t\t\t\tif (this.dateWithinRange(newDate)) {\n\t\t\t\t\t\tthis.date = newDate;\n\t\t\t\t\t\tthis.viewDate = newViewDate;\n\t\t\t\t\t\tthis.setValue();\n\t\t\t\t\t\tthis.update();\n\t\t\t\t\t\te.preventDefault();\n\t\t\t\t\t\tdateChanged = true;\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\tcase 38: // up\n\t\t\t\tcase 40: // down\n\t\t\t\t\tif (!this.keyboardNavigation) break;\n\t\t\t\t\tdir = e.keyCode == 38 ? -1 : 1;\n\t\t\t\t\tviewMode = this.viewMode;\n\t\t\t\t\tif (e.ctrlKey) {\n\t\t\t\t\t\tviewMode += 2;\n\t\t\t\t\t} else if (e.shiftKey) {\n\t\t\t\t\t\tviewMode += 1;\n\t\t\t\t\t}\n\t\t\t\t\tif (viewMode == 4) {\n\t\t\t\t\t\tnewDate = this.moveYear(this.date, dir);\n\t\t\t\t\t\tnewViewDate = this.moveYear(this.viewDate, dir);\n\t\t\t\t\t} else if (viewMode == 3) {\n\t\t\t\t\t\tnewDate = this.moveMonth(this.date, dir);\n\t\t\t\t\t\tnewViewDate = this.moveMonth(this.viewDate, dir);\n\t\t\t\t\t} else if (viewMode == 2) {\n\t\t\t\t\t\tnewDate = this.moveDate(this.date, dir * 7);\n\t\t\t\t\t\tnewViewDate = this.moveDate(this.viewDate, dir * 7);\n\t\t\t\t\t} else if (viewMode == 1) {\n\t\t\t\t\t\tif (this.showMeridian) {\n\t\t\t\t\t\t\tnewDate = this.moveHour(this.date, dir * 6);\n\t\t\t\t\t\t\tnewViewDate = this.moveHour(this.viewDate, dir * 6);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tnewDate = this.moveHour(this.date, dir * 4);\n\t\t\t\t\t\t\tnewViewDate = this.moveHour(this.viewDate, dir * 4);\n\t\t\t\t\t\t}\n\t\t\t\t\t} else if (viewMode == 0) {\n\t\t\t\t\t\tnewDate = this.moveMinute(this.date, dir * 4);\n\t\t\t\t\t\tnewViewDate = this.moveMinute(this.viewDate, dir * 4);\n\t\t\t\t\t}\n\t\t\t\t\tif (this.dateWithinRange(newDate)) {\n\t\t\t\t\t\tthis.date = newDate;\n\t\t\t\t\t\tthis.viewDate = newViewDate;\n\t\t\t\t\t\tthis.setValue();\n\t\t\t\t\t\tthis.update();\n\t\t\t\t\t\te.preventDefault();\n\t\t\t\t\t\tdateChanged = true;\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\tcase 13: // enter\n\t\t\t\t\tif (this.viewMode != 0) {\n\t\t\t\t\t\tvar oldViewMode = this.viewMode;\n\t\t\t\t\t\tthis.showMode(-1);\n\t\t\t\t\t\tthis.fill();\n\t\t\t\t\t\tif (oldViewMode == this.viewMode && this.autoclose) {\n\t\t\t\t\t\t\tthis.hide();\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis.fill();\n\t\t\t\t\t\tif (this.autoclose) {\n\t\t\t\t\t\t\tthis.hide();\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\te.preventDefault();\n\t\t\t\t\tbreak;\n\t\t\t\tcase 9: // tab\n\t\t\t\t\tthis.hide();\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t\tif (dateChanged) {\n\t\t\t\tvar element;\n\t\t\t\tif (this.isInput) {\n\t\t\t\t\telement = this.element;\n\t\t\t\t} else if (this.component) {\n\t\t\t\t\telement = this.element.find('input');\n\t\t\t\t}\n\t\t\t\tif (element) {\n\t\t\t\t\telement.change();\n\t\t\t\t}\n\t\t\t\tthis.element.trigger({\n\t\t\t\t\ttype: 'changeDate',\n\t\t\t\t\tdate: this.date\n\t\t\t\t});\n\t\t\t}\n\t\t},\n\n\t\tshowMode: function (dir) {\n\t\t\tif (dir) {\n\t\t\t\tvar newViewMode = Math.max(0, Math.min(DPGlobal.modes.length - 1, this.viewMode + dir));\n\t\t\t\tif (newViewMode >= this.minView && newViewMode <= this.maxView) {\n\t\t\t\t\tthis.element.trigger({\n\t\t\t\t\t\ttype:        'changeMode',\n\t\t\t\t\t\tdate:        this.viewDate,\n\t\t\t\t\t\toldViewMode: this.viewMode,\n\t\t\t\t\t\tnewViewMode: newViewMode\n\t\t\t\t\t});\n\n\t\t\t\t\tthis.viewMode = newViewMode;\n\t\t\t\t}\n\t\t\t}\n\t\t\t/*\n\t\t\t vitalets: fixing bug of very special conditions:\n\t\t\t jquery 1.7.1 + webkit + show inline datetimepicker in bootstrap popover.\n\t\t\t Method show() does not set display css correctly and datetimepicker is not shown.\n\t\t\t Changed to .css('display', 'block') solve the problem.\n\t\t\t See https://github.com/vitalets/x-editable/issues/37\n\n\t\t\t In jquery 1.7.2+ everything works fine.\n\t\t\t */\n\t\t\t//this.picker.find('>div').hide().filter('.datetimepicker-'+DPGlobal.modes[this.viewMode].clsName).show();\n\t\t\tthis.picker.find('>div').hide().filter('.datetimepicker-' + DPGlobal.modes[this.viewMode].clsName).css('display', 'block');\n\t\t\tthis.updateNavArrows();\n\t\t},\n\n\t\treset: function (e) {\n\t\t\tthis._setDate(null, 'date');\n\t\t}\n\t};\n\n\t$.fn.datetimepicker = function (option) {\n\t\tvar args = Array.apply(null, arguments);\n\t\targs.shift();\n\t\treturn this.each(function () {\n\t\t\tvar $this = $(this),\n\t\t\t\tdata = $this.data('datetimepicker'),\n\t\t\t\toptions = typeof option == 'object' && option;\n\t\t\tif (!data) {\n\t\t\t\t$this.data('datetimepicker', (data = new Datetimepicker(this, $.extend({}, $.fn.datetimepicker.defaults, options))));\n\t\t\t}\n\t\t\tif (typeof option == 'string' && typeof data[option] == 'function') {\n\t\t\t\tdata[option].apply(data, args);\n\t\t\t}\n\t\t});\n\t};\n\n\t$.fn.datetimepicker.defaults = {\n\t};\n\t$.fn.datetimepicker.Constructor = Datetimepicker;\n\tvar dates = $.fn.datetimepicker.dates = {\n\t\ten: {\n\t\t\tdays:        [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\", \"Sunday\"],\n\t\t\tdaysShort:   [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\", \"Sun\"],\n\t\t\tdaysMin:     [\"Su\", \"Mo\", \"Tu\", \"We\", \"Th\", \"Fr\", \"Sa\", \"Su\"],\n\t\t\tmonths:      [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"],\n\t\t\tmonthsShort: [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"],\n\t\t\tmeridiem:    [\"am\", \"pm\"],\n\t\t\tsuffix:      [\"st\", \"nd\", \"rd\", \"th\"],\n\t\t\ttoday:       \"Today\"\n\t\t}\n\t};\n\n\tvar DPGlobal = {\n\t\tmodes:            [\n\t\t\t{\n\t\t\t\tclsName: 'minutes',\n\t\t\t\tnavFnc:  'Hours',\n\t\t\t\tnavStep: 1\n\t\t\t},\n\t\t\t{\n\t\t\t\tclsName: 'hours',\n\t\t\t\tnavFnc:  'Date',\n\t\t\t\tnavStep: 1\n\t\t\t},\n\t\t\t{\n\t\t\t\tclsName: 'days',\n\t\t\t\tnavFnc:  'Month',\n\t\t\t\tnavStep: 1\n\t\t\t},\n\t\t\t{\n\t\t\t\tclsName: 'months',\n\t\t\t\tnavFnc:  'FullYear',\n\t\t\t\tnavStep: 1\n\t\t\t},\n\t\t\t{\n\t\t\t\tclsName: 'years',\n\t\t\t\tnavFnc:  'FullYear',\n\t\t\t\tnavStep: 10\n\t\t\t}\n\t\t],\n\t\tisLeapYear:       function (year) {\n\t\t\treturn (((year % 4 === 0) && (year % 100 !== 0)) || (year % 400 === 0))\n\t\t},\n\t\tgetDaysInMonth:   function (year, month) {\n\t\t\treturn [31, (DPGlobal.isLeapYear(year) ? 29 : 28), 31, 30, 31, 30, 31, 31, 30, 31, 30, 31][month]\n\t\t},\n\t\tgetDefaultFormat: function (type, field) {\n\t\t\tif (type == \"standard\") {\n\t\t\t\tif (field == 'input')\n\t\t\t\t\treturn 'yyyy-mm-dd hh:ii';\n\t\t\t\telse\n\t\t\t\t\treturn 'yyyy-mm-dd hh:ii:ss';\n\t\t\t} else if (type == \"php\") {\n\t\t\t\tif (field == 'input')\n\t\t\t\t\treturn 'Y-m-d H:i';\n\t\t\t\telse\n\t\t\t\t\treturn 'Y-m-d H:i:s';\n\t\t\t} else {\n\t\t\t\tthrow new Error(\"Invalid format type.\");\n\t\t\t}\n\t\t},\n\t\tvalidParts:       function (type) {\n\t\t\tif (type == \"standard\") {\n\t\t\t\treturn /hh?|HH?|p|P|ii?|ss?|dd?|DD?|mm?|MM?|yy(?:yy)?/g;\n\t\t\t} else if (type == \"php\") {\n\t\t\t\treturn /[dDjlNwzFmMnStyYaABgGhHis]/g;\n\t\t\t} else {\n\t\t\t\tthrow new Error(\"Invalid format type.\");\n\t\t\t}\n\t\t},\n\t\tnonpunctuation:   /[^ -\\/:-@\\[-`{-~\\t\\n\\rTZ]+/g,\n\t\tparseFormat:      function (format, type) {\n\t\t\t// IE treats \\0 as a string end in inputs (truncating the value),\n\t\t\t// so it's a bad format delimiter, anyway\n\t\t\tvar separators = format.replace(this.validParts(type), '\\0').split('\\0'),\n\t\t\t\tparts = format.match(this.validParts(type));\n\t\t\tif (!separators || !separators.length || !parts || parts.length == 0) {\n\t\t\t\tthrow new Error(\"Invalid date format.\");\n\t\t\t}\n\t\t\treturn {separators: separators, parts: parts};\n\t\t},\n\t\tparseDate:        function (date, format, language, type) {\n\t\t\tif (date instanceof Date) {\n\t\t\t\tvar dateUTC = new Date(date.valueOf() - date.getTimezoneOffset() * 60000);\n\t\t\t\tdateUTC.setMilliseconds(0);\n\t\t\t\treturn dateUTC;\n\t\t\t}\n\t\t\tif (/^\\d{4}\\-\\d{1,2}\\-\\d{1,2}$/.test(date)) {\n\t\t\t\tformat = this.parseFormat('yyyy-mm-dd', type);\n\t\t\t}\n\t\t\tif (/^\\d{4}\\-\\d{1,2}\\-\\d{1,2}[T ]\\d{1,2}\\:\\d{1,2}$/.test(date)) {\n\t\t\t\tformat = this.parseFormat('yyyy-mm-dd hh:ii', type);\n\t\t\t}\n\t\t\tif (/^\\d{4}\\-\\d{1,2}\\-\\d{1,2}[T ]\\d{1,2}\\:\\d{1,2}\\:\\d{1,2}[Z]{0,1}$/.test(date)) {\n\t\t\t\tformat = this.parseFormat('yyyy-mm-dd hh:ii:ss', type);\n\t\t\t}\n\t\t\tif (/^[-+]\\d+[dmwy]([\\s,]+[-+]\\d+[dmwy])*$/.test(date)) {\n\t\t\t\tvar part_re = /([-+]\\d+)([dmwy])/,\n\t\t\t\t\tparts = date.match(/([-+]\\d+)([dmwy])/g),\n\t\t\t\t\tpart, dir;\n\t\t\t\tdate = new Date();\n\t\t\t\tfor (var i = 0; i < parts.length; i++) {\n\t\t\t\t\tpart = part_re.exec(parts[i]);\n\t\t\t\t\tdir = parseInt(part[1]);\n\t\t\t\t\tswitch (part[2]) {\n\t\t\t\t\t\tcase 'd':\n\t\t\t\t\t\t\tdate.setUTCDate(date.getUTCDate() + dir);\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 'm':\n\t\t\t\t\t\t\tdate = Datetimepicker.prototype.moveMonth.call(Datetimepicker.prototype, date, dir);\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 'w':\n\t\t\t\t\t\t\tdate.setUTCDate(date.getUTCDate() + dir * 7);\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 'y':\n\t\t\t\t\t\t\tdate = Datetimepicker.prototype.moveYear.call(Datetimepicker.prototype, date, dir);\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn UTCDate(date.getUTCFullYear(), date.getUTCMonth(), date.getUTCDate(), date.getUTCHours(), date.getUTCMinutes(), date.getUTCSeconds(), 0);\n\t\t\t}\n\t\t\tvar parts = date && date.match(this.nonpunctuation) || [],\n\t\t\t\tdate = new Date(0, 0, 0, 0, 0, 0, 0),\n\t\t\t\tparsed = {},\n\t\t\t\tsetters_order = ['hh', 'h', 'ii', 'i', 'ss', 's', 'yyyy', 'yy', 'M', 'MM', 'm', 'mm', 'D', 'DD', 'd', 'dd', 'H', 'HH', 'p', 'P'],\n\t\t\t\tsetters_map = {\n\t\t\t\t\thh:   function (d, v) {\n\t\t\t\t\t\treturn d.setUTCHours(v);\n\t\t\t\t\t},\n\t\t\t\t\th:    function (d, v) {\n\t\t\t\t\t\treturn d.setUTCHours(v);\n\t\t\t\t\t},\n\t\t\t\t\tHH:   function (d, v) {\n\t\t\t\t\t\treturn d.setUTCHours(v == 12 ? 0 : v);\n\t\t\t\t\t},\n\t\t\t\t\tH:    function (d, v) {\n\t\t\t\t\t\treturn d.setUTCHours(v == 12 ? 0 : v);\n\t\t\t\t\t},\n\t\t\t\t\tii:   function (d, v) {\n\t\t\t\t\t\treturn d.setUTCMinutes(v);\n\t\t\t\t\t},\n\t\t\t\t\ti:    function (d, v) {\n\t\t\t\t\t\treturn d.setUTCMinutes(v);\n\t\t\t\t\t},\n\t\t\t\t\tss:   function (d, v) {\n\t\t\t\t\t\treturn d.setUTCSeconds(v);\n\t\t\t\t\t},\n\t\t\t\t\ts:    function (d, v) {\n\t\t\t\t\t\treturn d.setUTCSeconds(v);\n\t\t\t\t\t},\n\t\t\t\t\tyyyy: function (d, v) {\n\t\t\t\t\t\treturn d.setUTCFullYear(v);\n\t\t\t\t\t},\n\t\t\t\t\tyy:   function (d, v) {\n\t\t\t\t\t\treturn d.setUTCFullYear(2000 + v);\n\t\t\t\t\t},\n\t\t\t\t\tm:    function (d, v) {\n\t\t\t\t\t\tv -= 1;\n\t\t\t\t\t\twhile (v < 0) v += 12;\n\t\t\t\t\t\tv %= 12;\n\t\t\t\t\t\td.setUTCMonth(v);\n\t\t\t\t\t\twhile (d.getUTCMonth() != v)\n\t\t\t\t\t\t\td.setUTCDate(d.getUTCDate() - 1);\n\t\t\t\t\t\treturn d;\n\t\t\t\t\t},\n\t\t\t\t\td:    function (d, v) {\n\t\t\t\t\t\treturn d.setUTCDate(v);\n\t\t\t\t\t},\n\t\t\t\t\tp:    function (d, v) {\n\t\t\t\t\t\treturn d.setUTCHours(v == 1 ? d.getUTCHours() + 12 : d.getUTCHours());\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\tval, filtered, part;\n\t\t\tsetters_map['M'] = setters_map['MM'] = setters_map['mm'] = setters_map['m'];\n\t\t\tsetters_map['dd'] = setters_map['d'];\n\t\t\tsetters_map['P'] = setters_map['p'];\n\t\t\tdate = UTCDate(date.getFullYear(), date.getMonth(), date.getDate(), date.getHours(), date.getMinutes(), date.getSeconds());\n\t\t\tif (parts.length == format.parts.length) {\n\t\t\t\tfor (var i = 0, cnt = format.parts.length; i < cnt; i++) {\n\t\t\t\t\tval = parseInt(parts[i], 10);\n\t\t\t\t\tpart = format.parts[i];\n\t\t\t\t\tif (isNaN(val)) {\n\t\t\t\t\t\tswitch (part) {\n\t\t\t\t\t\t\tcase 'MM':\n\t\t\t\t\t\t\t\tfiltered = $(dates[language].months).filter(function () {\n\t\t\t\t\t\t\t\t\tvar m = this.slice(0, parts[i].length),\n\t\t\t\t\t\t\t\t\t\tp = parts[i].slice(0, m.length);\n\t\t\t\t\t\t\t\t\treturn m == p;\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\tval = $.inArray(filtered[0], dates[language].months) + 1;\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\tcase 'M':\n\t\t\t\t\t\t\t\tfiltered = $(dates[language].monthsShort).filter(function () {\n\t\t\t\t\t\t\t\t\tvar m = this.slice(0, parts[i].length),\n\t\t\t\t\t\t\t\t\t\tp = parts[i].slice(0, m.length);\n\t\t\t\t\t\t\t\t\treturn m == p;\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\tval = $.inArray(filtered[0], dates[language].monthsShort) + 1;\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\tcase 'p':\n\t\t\t\t\t\t\tcase 'P':\n\t\t\t\t\t\t\t\tval = $.inArray(parts[i].toLowerCase(), dates[language].meridiem);\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tparsed[part] = val;\n\t\t\t\t}\n\t\t\t\tfor (var i = 0, s; i < setters_order.length; i++) {\n\t\t\t\t\ts = setters_order[i];\n\t\t\t\t\tif (s in parsed && !isNaN(parsed[s]))\n\t\t\t\t\t\tsetters_map[s](date, parsed[s])\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn date;\n\t\t},\n\t\tformatDate:       function (date, format, language, type) {\n\t\t\tif (date == null) {\n\t\t\t\treturn '';\n\t\t\t}\n\t\t\tvar val;\n\t\t\tif (type == 'standard') {\n\t\t\t\tval = {\n\t\t\t\t\t// year\n\t\t\t\t\tyy:   date.getUTCFullYear().toString().substring(2),\n\t\t\t\t\tyyyy: date.getUTCFullYear(),\n\t\t\t\t\t// month\n\t\t\t\t\tm:    date.getUTCMonth() + 1,\n\t\t\t\t\tM:    dates[language].monthsShort[date.getUTCMonth()],\n\t\t\t\t\tMM:   dates[language].months[date.getUTCMonth()],\n\t\t\t\t\t// day\n\t\t\t\t\td:    date.getUTCDate(),\n\t\t\t\t\tD:    dates[language].daysShort[date.getUTCDay()],\n\t\t\t\t\tDD:   dates[language].days[date.getUTCDay()],\n\t\t\t\t\tp:    (dates[language].meridiem.length == 2 ? dates[language].meridiem[date.getUTCHours() < 12 ? 0 : 1] : ''),\n\t\t\t\t\t// hour\n\t\t\t\t\th:    date.getUTCHours(),\n\t\t\t\t\t// minute\n\t\t\t\t\ti:    date.getUTCMinutes(),\n\t\t\t\t\t// second\n\t\t\t\t\ts:    date.getUTCSeconds()\n\t\t\t\t};\n\n\t\t\t\tif (dates[language].meridiem.length == 2) {\n\t\t\t\t\tval.H = (val.h % 12 == 0 ? 12 : val.h % 12);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tval.H = val.h;\n\t\t\t\t}\n\t\t\t\tval.HH = (val.H < 10 ? '0' : '') + val.H;\n\t\t\t\tval.P = val.p.toUpperCase();\n\t\t\t\tval.hh = (val.h < 10 ? '0' : '') + val.h;\n\t\t\t\tval.ii = (val.i < 10 ? '0' : '') + val.i;\n\t\t\t\tval.ss = (val.s < 10 ? '0' : '') + val.s;\n\t\t\t\tval.dd = (val.d < 10 ? '0' : '') + val.d;\n\t\t\t\tval.mm = (val.m < 10 ? '0' : '') + val.m;\n\t\t\t} else if (type == 'php') {\n\t\t\t\t// php format\n\t\t\t\tval = {\n\t\t\t\t\t// year\n\t\t\t\t\ty: date.getUTCFullYear().toString().substring(2),\n\t\t\t\t\tY: date.getUTCFullYear(),\n\t\t\t\t\t// month\n\t\t\t\t\tF: dates[language].months[date.getUTCMonth()],\n\t\t\t\t\tM: dates[language].monthsShort[date.getUTCMonth()],\n\t\t\t\t\tn: date.getUTCMonth() + 1,\n\t\t\t\t\tt: DPGlobal.getDaysInMonth(date.getUTCFullYear(), date.getUTCMonth()),\n\t\t\t\t\t// day\n\t\t\t\t\tj: date.getUTCDate(),\n\t\t\t\t\tl: dates[language].days[date.getUTCDay()],\n\t\t\t\t\tD: dates[language].daysShort[date.getUTCDay()],\n\t\t\t\t\tw: date.getUTCDay(), // 0 -> 6\n\t\t\t\t\tN: (date.getUTCDay() == 0 ? 7 : date.getUTCDay()),       // 1 -> 7\n\t\t\t\t\tS: (date.getUTCDate() % 10 <= dates[language].suffix.length ? dates[language].suffix[date.getUTCDate() % 10 - 1] : ''),\n\t\t\t\t\t// hour\n\t\t\t\t\ta: (dates[language].meridiem.length == 2 ? dates[language].meridiem[date.getUTCHours() < 12 ? 0 : 1] : ''),\n\t\t\t\t\tg: (date.getUTCHours() % 12 == 0 ? 12 : date.getUTCHours() % 12),\n\t\t\t\t\tG: date.getUTCHours(),\n\t\t\t\t\t// minute\n\t\t\t\t\ti: date.getUTCMinutes(),\n\t\t\t\t\t// second\n\t\t\t\t\ts: date.getUTCSeconds()\n\t\t\t\t};\n\t\t\t\tval.m = (val.n < 10 ? '0' : '') + val.n;\n\t\t\t\tval.d = (val.j < 10 ? '0' : '') + val.j;\n\t\t\t\tval.A = val.a.toString().toUpperCase();\n\t\t\t\tval.h = (val.g < 10 ? '0' : '') + val.g;\n\t\t\t\tval.H = (val.G < 10 ? '0' : '') + val.G;\n\t\t\t\tval.i = (val.i < 10 ? '0' : '') + val.i;\n\t\t\t\tval.s = (val.s < 10 ? '0' : '') + val.s;\n\t\t\t} else {\n\t\t\t\tthrow new Error(\"Invalid format type.\");\n\t\t\t}\n\t\t\tvar date = [],\n\t\t\t\tseps = $.extend([], format.separators);\n\t\t\tfor (var i = 0, cnt = format.parts.length; i < cnt; i++) {\n\t\t\t\tif (seps.length) {\n\t\t\t\t\tdate.push(seps.shift());\n\t\t\t\t}\n\t\t\t\tdate.push(val[format.parts[i]]);\n\t\t\t}\n\t\t\tif (seps.length) {\n\t\t\t\tdate.push(seps.shift());\n\t\t\t}\n\t\t\treturn date.join('');\n\t\t},\n\t\tconvertViewMode:  function (viewMode) {\n\t\t\tswitch (viewMode) {\n\t\t\t\tcase 4:\n\t\t\t\tcase 'decade':\n\t\t\t\t\tviewMode = 4;\n\t\t\t\t\tbreak;\n\t\t\t\tcase 3:\n\t\t\t\tcase 'year':\n\t\t\t\t\tviewMode = 3;\n\t\t\t\t\tbreak;\n\t\t\t\tcase 2:\n\t\t\t\tcase 'month':\n\t\t\t\t\tviewMode = 2;\n\t\t\t\t\tbreak;\n\t\t\t\tcase 1:\n\t\t\t\tcase 'day':\n\t\t\t\t\tviewMode = 1;\n\t\t\t\t\tbreak;\n\t\t\t\tcase 0:\n\t\t\t\tcase 'hour':\n\t\t\t\t\tviewMode = 0;\n\t\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\treturn viewMode;\n\t\t},\n\t\theadTemplate:     '<thead>' +\n\t\t\t\t\t\t\t  '<tr>' +\n\t\t\t\t\t\t\t  '<th class=\"prev\"><i class=\"icon-arrow-left\"/></th>' +\n\t\t\t\t\t\t\t  '<th colspan=\"5\" class=\"switch\"></th>' +\n\t\t\t\t\t\t\t  '<th class=\"next\"><i class=\"icon-arrow-right\"/></th>' +\n\t\t\t\t\t\t\t  '</tr>' +\n\t\t\t'</thead>',\n\t\theadTemplateV3:   '<thead>' +\n\t\t\t\t\t\t\t  '<tr>' +\n\t\t\t\t\t\t\t  '<th class=\"prev\"><i class=\"glyphicon glyphicon-arrow-left\"></i> </th>' +\n\t\t\t\t\t\t\t  '<th colspan=\"5\" class=\"switch\"></th>' +\n\t\t\t\t\t\t\t  '<th class=\"next\"><i class=\"glyphicon glyphicon-arrow-right\"></i> </th>' +\n\t\t\t\t\t\t\t  '</tr>' +\n\t\t\t'</thead>',\n\t\tcontTemplate:     '<tbody><tr><td colspan=\"7\"></td></tr></tbody>',\n\t\tfootTemplate:     '<tfoot><tr><th colspan=\"7\" class=\"today\"></th></tr></tfoot>'\n\t};\n\tDPGlobal.template = '<div class=\"datetimepicker\">' +\n\t\t'<div class=\"datetimepicker-minutes\">' +\n\t\t'<table class=\" table-condensed\">' +\n\t\tDPGlobal.headTemplate +\n\t\tDPGlobal.contTemplate +\n\t\tDPGlobal.footTemplate +\n\t\t'</table>' +\n\t\t'</div>' +\n\t\t'<div class=\"datetimepicker-hours\">' +\n\t\t'<table class=\" table-condensed\">' +\n\t\tDPGlobal.headTemplate +\n\t\tDPGlobal.contTemplate +\n\t\tDPGlobal.footTemplate +\n\t\t'</table>' +\n\t\t'</div>' +\n\t\t'<div class=\"datetimepicker-days\">' +\n\t\t'<table class=\" table-condensed\">' +\n\t\tDPGlobal.headTemplate +\n\t\t'<tbody></tbody>' +\n\t\tDPGlobal.footTemplate +\n\t\t'</table>' +\n\t\t'</div>' +\n\t\t'<div class=\"datetimepicker-months\">' +\n\t\t'<table class=\"table-condensed\">' +\n\t\tDPGlobal.headTemplate +\n\t\tDPGlobal.contTemplate +\n\t\tDPGlobal.footTemplate +\n\t\t'</table>' +\n\t\t'</div>' +\n\t\t'<div class=\"datetimepicker-years\">' +\n\t\t'<table class=\"table-condensed\">' +\n\t\tDPGlobal.headTemplate +\n\t\tDPGlobal.contTemplate +\n\t\tDPGlobal.footTemplate +\n\t\t'</table>' +\n\t\t'</div>' +\n\t\t'</div>';\n\tDPGlobal.templateV3 = '<div class=\"datetimepicker\">' +\n\t\t'<div class=\"datetimepicker-minutes\">' +\n\t\t'<table class=\" table-condensed\">' +\n\t\tDPGlobal.headTemplateV3 +\n\t\tDPGlobal.contTemplate +\n\t\tDPGlobal.footTemplate +\n\t\t'</table>' +\n\t\t'</div>' +\n\t\t'<div class=\"datetimepicker-hours\">' +\n\t\t'<table class=\" table-condensed\">' +\n\t\tDPGlobal.headTemplateV3 +\n\t\tDPGlobal.contTemplate +\n\t\tDPGlobal.footTemplate +\n\t\t'</table>' +\n\t\t'</div>' +\n\t\t'<div class=\"datetimepicker-days\">' +\n\t\t'<table class=\" table-condensed\">' +\n\t\tDPGlobal.headTemplateV3 +\n\t\t'<tbody></tbody>' +\n\t\tDPGlobal.footTemplate +\n\t\t'</table>' +\n\t\t'</div>' +\n\t\t'<div class=\"datetimepicker-months\">' +\n\t\t'<table class=\"table-condensed\">' +\n\t\tDPGlobal.headTemplateV3 +\n\t\tDPGlobal.contTemplate +\n\t\tDPGlobal.footTemplate +\n\t\t'</table>' +\n\t\t'</div>' +\n\t\t'<div class=\"datetimepicker-years\">' +\n\t\t'<table class=\"table-condensed\">' +\n\t\tDPGlobal.headTemplateV3 +\n\t\tDPGlobal.contTemplate +\n\t\tDPGlobal.footTemplate +\n\t\t'</table>' +\n\t\t'</div>' +\n\t\t'</div>';\n\t$.fn.datetimepicker.DPGlobal = DPGlobal;\n\n\t/* DATETIMEPICKER NO CONFLICT\n\t * =================== */\n\n\t$.fn.datetimepicker.noConflict = function () {\n\t\t$.fn.datetimepicker = old;\n\t\treturn this;\n\t};\n\n\t/* DATETIMEPICKER DATA-API\n\t * ================== */\n\n\t$(document).on(\n\t\t'focus.datetimepicker.data-api click.datetimepicker.data-api',\n\t\t'[data-provide=\"datetimepicker\"]',\n\t\tfunction (e) {\n\t\t\tvar $this = $(this);\n\t\t\tif ($this.data('datetimepicker')) return;\n\t\t\te.preventDefault();\n\t\t\t// component click requires us to explicitly show it\n\t\t\t$this.datetimepicker('show');\n\t\t}\n\t);\n\t$(function () {\n\t\t$('[data-provide=\"datetimepicker-inline\"]').datetimepicker();\n\t});\n\n}(window.jQuery);\n"},714:function(t,e,n){n(14)(n(296))}},[714]);